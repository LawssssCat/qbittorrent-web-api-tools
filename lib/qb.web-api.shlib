#!/bin/bash

# defaults, but use exported values if they are set
: ${qbt_host:=http://127.0.0.1}
: ${qbt_port:=8080}
: ${qbt_username:=admin}
: ${qbt_password:=adminadmin}

# paths
jq_executable="$(command -v jq)"
curl_executable="$(command -v curl)"

if [[ ! -x $jq_executable ]]; then
	fatal $EXIT_EXCEPTION "${COLOR_RED}Fail on jq. Aborting.${COLOR_RESET}" "\n" \
	"You can find it here: https://stedolan.github.io/jq/"    "\n" \
	"Or you can install it with -> sudo apt install jq"
fi

if [[ ! -x $curl_executable ]]; then
	fatal $EXIT_EXCEPTION "${COLOR_RED}Fail on curl. Aborting.${COLOR_RESET}" "\n" \
	"You can install it with -> sudo apt install curl"
fi

export jq_executable
export curl_executable

curl_executable="$curl_executable --silent --fail --show-error --connect-timeout 120"

# qbittorrent web-api functions
function get_cookie {
    if [[ -z "$qbt_cookie" ]]; then
        qbt_cookie=$($curl_executable \
            --header "Referer: ${qbt_host}:${qbt_port}" \
            --cookie-jar - \
            --data "username=${qbt_username}&password=${qbt_password}" ${qbt_host}:${qbt_port}/api/v2/auth/login) || exit $EXIT_ERROR
    fi
}

function get_app_preferences {
    get_cookie &&
	qbt_app_preferences=$(echo "$qbt_cookie" | $curl_executable \
		--cookie - \
		--request GET "${qbt_host}:${qbt_port}/api/v2/app/preferences") || exit $EXIT_ERROR
}

function set_app_preferences {
	local app_preferences="$1" # json format, e.g. {"save_path":"C:/Users/Dayman/Downloads","queueing_enabled":false,"scan_dirs":{"C:/Games": 0,"D:/Downloads": 1}}
	echo "$app_preferences" | jq "" > /dev/null || exit $EXIT_ARGUMENT
	get_cookie &&
	qbt_webapi_response=$(echo "$qbt_cookie" | $curl_executable \
        -d "json=$app_preferences" \
		--cookie - \
		--request POST "${qbt_host}:${qbt_port}/api/v2/app/setPreferences") || exit $EXIT_ERROR
}

function get_torrent_trackers {
	local torrent_hash="$1"
	[ -z "$torrent_hash" ] && fatal $EXIT_ARGUMENT 'Fail for argument#1 "torrent_hash" unfound'
	get_cookie &&
	qbt_torrent_trackers=$(echo "$qbt_cookie" | $curl_executable \
		--cookie - \
		--request GET "${qbt_host}:${qbt_port}/api/v2/torrents/trackers?hash=$torrent_hash") || exit $EXIT_ERROR
}

function get_torrent_peers {
    local torrent_hash="$1"
    get_cookie &&
    qbt_torrent_peers=$(echo "$qbt_cookie" | $curl_executable \
        --cookie - \
        --request GET "${qbt_host}:${qbt_port}/api/v2/sync/torrentPeers?hash=$torrent_hash") || exit $EXIT_ERROR
}
function get_torrents {
    get_cookie &&
    qbt_torrents=$(echo "$qbt_cookie" | $curl_executable \
        --cookie - \
        --request GET "${qbt_host}:${qbt_port}/api/v2/torrents/info")
}

# other functions
function fetch_net_trackers {
    local fetch_urls="$@"
	[ -z "$fetch_urls" ] && fatal $EXIT_ARGUMENT 'Fail for argument#1 "fetch_urls" unfound'
	local tmp_tracker_list=""
	for j in $fetch_urls; do
		debug "fetch $j"
		local tmp_fetch_result="$($curl_executable --connect-timeout 20 $j | grep -e '^http://' -e '^https://' -e '^udp://')"
		if [ $? -eq 0 ] && [ -n "$tmp_fetch_result" ]; then
			tmp_tracker_list+=$tmp_fetch_result
			tmp_tracker_list+=$'\n'
		fi
	done
	net_trackers="$(echo "$tmp_tracker_list" | awk '{for (i=1;i<=NF;i++) if (!a[$i]++) printf("%s%s",$i,FS)}{printf("\n")}' | xargs | tr ' ' '\n')"
}
